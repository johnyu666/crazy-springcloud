package

import com.crazymaker.springcloud.common.page.PageOut;
import com.crazymaker.springcloud.common.result.RestOut;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiImplicitParam;
import io.swagger.annotations.ApiImplicitParams;
import io.swagger.annotations.ApiOperation;
import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;

import java.util.Map;

${package}.${moduleName}.controller;
    ${package}.${moduleName}.model.${className};
    ${package}.${moduleName}.service.I${className}Service;


/**
 * ${comments}
 *
 * @author ${author}
 * @date ${datetime}
 */
@Slf4j
@RestController
@RequestMapping("/${pathName}")
@Api(tags = "${comments}")
public class ${className}Controller
{
    @Autowired
    private I${className}Service ${classname}Service;

    /**
     * 列表
     */
    @ApiOperation(value = "查询列表")
    @ApiImplicitParams({
            @ApiImplicitParam(name = "page", value = "分页起始位置", required = true, dataType = "Integer"),
            @ApiImplicitParam(name = "limit", value = "分页结束位置", required = true, dataType = "Integer")
    })
    @GetMapping
    public PageOut list(@RequestParam Map<String, Object> params)
    {
        if (params.get("searchKey") != null)
        {
            params.put(String.valueOf(params.get("searchKey")), params.get("searchValue"));
        }
        return ${classname}Service.findList(params);
    }

    /**
     * 查询
     */
    @ApiOperation(value = "查询")
    @GetMapping("/{${pk.attrname}}")
    public RestOut findUserById(@PathVariable Long ${pk.attrname})
    {
        ${className} model = ${classname}Service.getById(${pk.attrname});
        return RestOut.success(model, "查询成功");
    }

    /**
     * 新增or更新
     */
    @ApiOperation(value = "保存")
    @PostMapping
    public RestOut save(@RequestBody ${className} ${classname})
    {
            ${classname}Service.saveOrUpdate(${classname});
        return RestOut.succeed("保存成功");
    }

    /**
     * 删除
     */
    @ApiOperation(value = "删除")
    @DeleteMapping("/{id}")
    public RestOut delete(@PathVariable Long ${pk.attrname})
    {
            ${classname}Service.removeById(${pk.attrname});
        return RestOut.succeed("删除成功");
    }
}
